from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import CallbackContext
from db_manager import DBManager

class CommandBase:
    def execute(self, update: Update, context: CallbackContext):
        raise NotImplementedError

class StartCommand(CommandBase):
    def execute(self, update: Update, context: CallbackContext):
        update.message.reply_text(
            '–í—ñ—Ç–∞—é —É <b>ADP Pizza</b>! üçï –¶–µ –≤–∞—à –æ—Å–æ–±–∏—Å—Ç–∏–π –ø–æ–º—ñ—á–Ω–∏–∫, –∑–∞–≤–¥—è–∫–∏ —è–∫–æ–º—É –≤–∏ –∑–º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—è –∑ –Ω–∞—à–∏–º –º–µ–Ω—é, '
            '–∑–∞–º–æ–≤–∏—Ç–∏ –ø—ñ—Ü—É —Ç–∞ –æ—Ç—Ä–∏–º–∞—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∞–∫—Ü—ñ—ó.\n\n<b>–î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:</b>\n<i>/menu</i> - –ø–µ—Ä–µ–≥–ª—è–¥ –º–µ–Ω—é –Ω–∞—à–∏—Ö –ø—ñ—Ü\n\n–°–ø–æ–¥—ñ–≤–∞—î–º–æ—Å—å, '
            '–≤–∏ –∑–Ω–∞–π–¥–µ—Ç–µ —É–ª—é–±–ª–µ–Ω—ñ —Å–º–∞–∫–∏ —Ç–∞ –Ω–∞—Å–æ–ª–æ–¥–∂—É–≤–∞—Ç–∏–º–µ—Ç–µ—Å—å –∫–æ–∂–Ω–∏–º —à–º–∞—Ç–æ—á–∫–æ–º! C–º–∞—á–Ω–æ–≥–æ! üçï', parse_mode='HTML')


class MenuCommand(CommandBase):
    def execute(self, update: Update, context: CallbackContext):
        cnx = DBManager.get_connection()
        cursor = cnx.cursor()
        cursor.execute("SELECT name FROM menu")
        rows = cursor.fetchall()

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –∫–∞–∂–¥–æ–π –ø–∏—Ü—Ü—ã
        keyboard = [[InlineKeyboardButton(row[0], callback_data=row[0])] for row in rows]

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "Show All"
        keyboard.append([InlineKeyboardButton("Show All", callback_data="SHOW_ALL")])

        reply_markup = InlineKeyboardMarkup(keyboard)
        update.message.reply_text('Please choose:', reply_markup=reply_markup)

        cursor.close()
        cnx.close()


class DetailsCommand(CommandBase):
    def execute(self, update: Update, context: CallbackContext):
        pizza_name = ' '.join(context.args)
        cnx = DBManager.get_connection()
        cursor = cnx.cursor()
        cursor.execute("SELECT name, description, photo_url, price FROM menu WHERE name = %s", (pizza_name,))
        row = cursor.fetchone()

        if row:
            message = f"üçï <b>{row[0]}</b>\n\nüí° <b>–°–∫–ª–∞–¥:</b> <i>{row[1]}</i>\n\nüíµ <b>–¶—ñ–Ω–∞:</b> {row[3]} –≥—Ä–Ω"
            if row[2]:
                context.bot.send_photo(chat_id=update.effective_chat.id, photo=row[2], caption=message, parse_mode='HTML')
            else:
                update.message.reply_text(message)
        else:
            update.message.reply_text("Pizza not found.")

        cursor.close()
        cnx.close()

class ButtonHandler(CommandBase):
    def execute(self, update: Update, context: CallbackContext):
        query = update.callback_query
        query.answer()  # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ callback
        callback_data = query.data

        if callback_data == "SHOW_ALL":
            self.show_all_details(update, context)
        else:
            pizza_name = callback_data
            context.args = [pizza_name]
            DetailsCommand().execute(update, context)

    def show_all_details(self, update: Update, context: CallbackContext):
        cnx = DBManager.get_connection()
        cursor = cnx.cursor()
        cursor.execute("SELECT name FROM menu")
        rows = cursor.fetchall()

        for row in rows:
            pizza_name = row[0]
            context.args = [pizza_name]
            DetailsCommand().execute(update, context)

        cursor.close()
        cnx.close()

